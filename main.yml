- name: Install software
  hosts: localhost
  connection: local
  become: false
  vars:
    install_homebrew_if_missing: false
    upgrade_homebrew_packages: false
      
  pre_tasks:
    - name: Read Inputs
      include_vars:
        file: inputs.yml
        name: data
      tags:
        - always
        
    - name: Homebrew | Check Installed
      stat:
        path: /opt/homebrew/bin/brew
      register: homebrew_check
      tags: 
        - homebrew 

    - name: Homebrew | Fail
      fail:
        msg: Homebrew is missing, install from http://brew.sh
      when:
        - not homebrew_check.stat.exists
        - not install_homebrew_if_missing
      tags: 
        - homebrew 

    - name: Homebrew | Install
      shell: /usr/bin/ruby -e "$ -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
      when:
        - not homebrew_check.stat.exists
        - install_homebrew_if_missing
      tags: 
        - homebrew 

    - name: Rust | Check Installed
      stat: 
        path: $HOME/.cargo/bin/cargo
      register: cargo_exists
      ignore_errors: true
      tags:
        - rust

  tasks:
    - name: Homebrew | Update
      homebrew:
        update_homebrew: true
      when: homebrew_check.stat.exists
      tags:
        - homebrew
    
    - name: Homebrew | Install Casks
      homebrew_cask:
        name: "{{ item }}"
        state: present
      loop: "{{data.brew_casks}}"
      register: result
      until: result is successful
      when: homebrew_check.stat.exists
      tags:
        - homebrew
        
    - name: Homebrew | Install Formulas
      homebrew:
        name: "{{ item }}"
        state: present
      loop: "{{data.brew_formulas}}"
      register: result
      until: result is successful
      when: homebrew_check.stat.exists
      tags:
        - homebrew

    - name: Rust | Install
      shell: curl https://sh.rustup.rs -sSf | sh -s -- -y
      when: 
        - not cargo_exists.stat.exists
      tags:
        - rust

    - name: Rust | Update
      shell: rustup update 
      tags:
        - rust

    - name: Rust | Cargo Install
      community.general.cargo:
        name: "{{item}}"
        state: present
      loop: "{{data.cargo_binaries}}"
      register: result
      until: result is successful
      tags:
        - rust

          
    - name: Git | Clone Repos
      git:
        repo: "{{item.repo}}"
        dest: "{{item.dest}}"
        clone: yes
        update: no
      loop: "{{data.git_repos}}"
      tags:
        - git
          
    - name: Golang | Path
      debug:
        msg: "https://go.dev/dl/go{{ data.golang_version }}.{{ ansible_os_family|lower }}-{{ ansible_architecture }}.pkg"
      tags:
        - debug
          
    - name: Golang | Install
      become: true
      unarchive:
        src: "https://go.dev/dl/go{{ data.golang_version }}.{{ ansible_os_family|lower }}-{{ ansible_architecture }}.tar.gz"
        dest: /usr/local
        mode: 0755
        remote_src: yes
        creates: /usr/local
      tags:
        - golang
